import e from"events";import*as t from"uuid";import{sleep as a,aelf as s}from"@portkey/utils";import{FetchRequest as r}from"@portkey/request";import{getContractBasic as c}from"@portkey/contracts";import"antd";var i,o=((i=o||{}).getBalances="@portkey/did-ui-sdk:getBalances",i.callViewMethod="@portkey/did-ui-sdk:callViewMethod",i.callSendMethod="@portkey/did-ui-sdk:callSendMethod",i.getTransactionFee="@portkey/did-ui-sdk:getTransactionFee",i.initViewContract="@portkey/did-ui-sdk:initViewContract",i),n=(e=>(e[e.error=0]="error",e[e.success=1]="success",e))(n||{});new e;class d{static async dispatch(e,s,r="sandbox"){let c=document.getElementById(r);c||(await a(1e3),c=document.createElement("iframe"));const i=t.v4().replace(/-/g,"");return c?.contentWindow.postMessage({event:e,data:{...s,sid:i}},"*"),{event:e,sid:i}}static dispatchToOrigin(e,t){e?.source?.postMessage({...t,eventName:e.data.event},e.origin)}static listen({event:e,sid:t}){return new Promise((a=>{window.addEventListener("message",(s=>{s.data.eventName===e&&s.data.sid===t&&a(s.data)}))}))}static async dispatchAndReceive(e,t,a="sandbox"){const s=await d.dispatch(e,t,a);return d.listen(s)}}const l=(e,t)=>(e=(e=>e?.error||e)(e))?"string"==typeof e?e:"string"==typeof e.message?e.message:t:t,p="f6e512a3c259e5f9af981d7f99d245aa5bc52fe448495e0b0dd56e8406be6f71";s.getWallet(p);const m={},g={};class u{constructor(){this.listener()}static callback(e,t){d.dispatchToOrigin(e,t)}listener(){window.addEventListener("message",(async function(e){switch(e.data.event){case o.callViewMethod:u.callViewMethod(e,u.callback);break;case o.callSendMethod:u.callSendMethod(e,u.callback);break;case o.getTransactionFee:u.getTransactionFee(e,u.callback);break;case o.initViewContract:u.initViewContract(e,u.callback)}}))}static async initViewContract(e,t){const a=e.data.data??{};try{const{rpcUrl:s,address:r,chainType:c}=a;return"aelf"!==c?t(e,{code:n.error,message:"Not support",sid:a.sid}):(await u._getELFViewContract(s,r),t(e,{code:n.error,message:"Not Support",sid:a.sid}))}catch(e){}}static async _getELFViewContract(e,t,a=p){let r=m?.[e]?.[t];return r||(r=await c({contractAddress:t,account:s.getWallet(a),rpcUrl:e}),m?.[e]||(m[e]={}),m[e][t]=r),r}static async _getELFSendContract(e,t,a){let r=g?.[e]?.[a]?.[t];return r||(r=await c({contractAddress:t,account:s.getWallet(a),rpcUrl:e}),g?.[e]||(g[e]={}),g?.[e]?.[a]||(g[e][a]={}),g[e][a][t]=r),r}static async callViewMethod(e,t){const a=e.data.data??{};try{const{rpcUrl:s,address:r,methodName:c,paramsOption:i="",chainType:o}=a;if(!s||!r||!c)return t(e,{code:n.error,message:"Invalid argument",sid:a.sid});if("aelf"!==o)return t(e,{code:n.error,message:"Not support",sid:a.sid});const d=await((await u._getELFViewContract(s,r))?.callViewMethod(c,i));if(d.error)return t(e,{code:n.error,error:d.error,sid:a.sid});t(e,{code:n.success,message:d.data,sid:a.sid})}catch(s){t(e,{code:n.error,message:s?.error||s,sid:a.sid})}}static async callSendMethod(e,t){const a=e.data.data??{};try{const{rpcUrl:r,address:c,methodName:i,privateKey:o,paramsOption:d,chainType:l,isGetSignTx:p=0,sendOptions:m}=a,g=(e=>{let t;return Object.entries(e).reverse().map((([e,a])=>{a||(t=e)})),t})({rpcUrl:r,address:c,methodName:i});if(g)return t(e,{code:n.error,message:`Miss Param: ${g}`,sid:a.sid});if("aelf"!==l)return t(e,{code:n.error,message:"Not support",sid:a.sid});const w=s.getWallet(o),h=await u._getELFSendContract(r,c,o),f=await((p?h?.encodedTx:h?.callSendMethod)?.(i,w,d,m));return t(e,f?.error?{code:n.error,message:f.error?.message,sid:a.sid,error:f.error}:{code:n.success,message:f?.data,sid:a.sid})}catch(s){t(e,{code:n.error,message:l(s),sid:a.sid})}}static async getTransactionFee(e,t){const a=e.data.data??{};try{const{rpcUrl:c,address:i,paramsOption:o,chainType:d,methodName:l,privateKey:p}=a;if("aelf"!==d)throw"Not support";const m=s.getAelfInstance(c),g=await u._getELFSendContract(c,i,p),w=await s.encodedTx({instance:m,contract:g,functionName:l,paramsOption:o});if(w.error)throw w.error;const h=await new r({}).send({url:`${c}/api/blockChain/calculateTransactionFee`,method:"POST",params:{RawTransaction:w}});if(!h?.Success)throw"Transaction failed";t(e,{code:n.success,message:h.TransactionFee,sid:a.sid})}catch(s){return t(e,{code:n.error,message:s,sid:a.sid})}}}new u;
//# sourceMappingURL=index.js.map
